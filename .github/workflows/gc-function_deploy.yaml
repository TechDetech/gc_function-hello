name: Deploy to a Google Cloud Function

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 90
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      #----------------------------------------------
      # check-out repo and set-up python  ---------
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      #----------------------------------------------
      # install & configure poetry  ---------------
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: false
      #----------------------------------------------
      # load cached venv if cache exists  ---------
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          poetry config virtualenvs.create false
          poetry install --no-interaction --no-root
      #----------------------------------------------
      # Authenticate to Google Cloud
      #----------------------------------------------
      - name: Authenticate to Google Cloud
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          project_id: ticketsaver-421701
          token_format: "access_token"
          create_credentials_file: true
          activate_credentials_file: true
          workload_identity_provider: ${{ secrets.GCP_WIP_ID }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      #----------------------------------------------
      # deploy the code as a Cloud Function
      #----------------------------------------------
      - name: Deploy a Cloud Function
        id: deploy-function
        uses: google-github-actions/deploy-cloud-functions@v2.1.0
        with:
          name: hello_world
          runtime: python312
          project_id:	ticketsaver-421701
          source_dir: hello_world
          entry_point: main

      - name: Output Deployment Status
        run: echo "Deployment completed successfully."
